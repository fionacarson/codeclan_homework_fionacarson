summarise(num_phones = n()) %>%
slice_max(num_phones)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) %>%
geom_histogram()
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram()
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating), colour = "white") +
geom_histogram()
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating), col = "white") +
geom_histogram()
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(col = "white")
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(col = "white", binwidth = 0.2)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(col = "white", binwidth = 0.1)
f_x <- dnorm(x = rating, mean = 3.608, sd = 0.669)
f_x <- phones %>%
dnorm(x = "rating", mean = 3.608, sd = 0.669)
library(tidyverse)
library(janitor)
library(skimr)
phones <- read_csv("data/20190928-items.csv")
phones <- clean_names(phones)
skim(phones)
phones %>%
group_by(brand) %>%
summarise(num_phones = n()) %>%
slice_max(num_phones)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(col = "white", binwidth = 0.1)
f_x <- phones %>%
dnorm(x = "rating", mean = 3.608, sd = 0.669)
View(phones)
f_x <- dnorm(x = phones$rating, mean = 3.608, sd = 0.669)
phones_stats <- phone %>%
filter(brand == "Samsung") %>%
summarise(
num = n(),
mean = mean(rating),
sd = sd(salary)
)
phones_stats <- phones %>%
filter(brand == "Samsung") %>%
summarise(
num = n(),
mean = mean(rating),
sd = sd(salary)
)
phones_stats <- phones %>%
filter(brand == "Samsung") %>%
summarise(
num = n(),
mean = mean(rating),
sd = sd(rating)
)
phones_stats
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(after_stat(y = density),col = "white", binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(after_stat(y = density)),col = "white", binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white",
binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
)
?dnorm
dnorm(phones$rating, mean = phones_stats$mean, sd = phones_stats$sd)
dnorm(phones$rating, mean = phones_stats$mean, sd = phones_stats$sd)
100 * (pnorm(q = 1) - pnorm(q = -1))
pnorm(phones$rating, mean = phones_stats$mean, sd = phones_stats$sd)
pnorm(1, mean = phones_stats$mean, sd = phones_stats$sd)
pnorm(q = 1, mean = phones_stats$mean, sd = phones_stats$sd)
100 * pnorm(q = 1, mean = phones_stats$mean, sd = phones_stats$sd)
100 * (pnorm(q = 1, mean = phones_stats$mean, sd = phones_stats$sd) - pnorm(q = -1, mean = phones_stats$mean, sd = phones_stats$sd))
100 * (pnorm(q = 1, mean = phones_stats$mean, sd = phones_stats$sd) - pnorm(q = -1, mean = phones_stats$mean, sd = phones_stats$sd))
pnorm(0)
ratings_scaled <- phones %>%
filter(brand == "Samsung") %>%
mutate(z_rating = scale(rating))
View(ratings_scaled)
100 * (pnorm(q = ratings_scaled$z_rating, mean = phones_stats$mean, sd = phones_stats$sd) - pnorm(q = ratings_scaled$z_rating, mean = phones_stats$mean, sd = phones_stats$sd))
View(phones_stats)
phones %>%
filter(rating = between(phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd))
phones %>%
filter(rating == between(phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd))
phones %>%
filter(rating == between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd))
phones_stats$mean - phones_stats$sd
phones_stats$mean + phones_stats$sd
filter(rating == between(rating, 2.9, 4.2)
phones %>%
filter(rating == between(rating, 2.9, 4.2))
phones %>%
filter(between(rating, 2.9, 4.2))
phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd))
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n())
View(within_1_sd)
View(within_1_sd)
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n())
View(within_2_sd)
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n())
prop_within_1_sd <- within_1_sd / nrow(phones)
prop_within_1_sd
prop_within_2_sd <- within_2_sd / nrow(phones)
prop_within_3_sd <- within_3_sd / nrow(phones)
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n())
prop_within_1_sd <- within_1_sd / nrow(phones)
prop_within_2_sd <- within_2_sd / nrow(phones)
prop_within_3_sd <- within_3_sd / nrow(phones)
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n())
within_3_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n())
prop_within_1_sd <- within_1_sd / nrow(phones)
prop_within_2_sd <- within_2_sd / nrow(phones)
prop_within_3_sd <- within_3_sd / nrow(phones)
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n())
within_3_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n())
prop_within_1_sd <- within_1_sd / nrow(phones)
prop_within_2_sd <- within_2_sd / nrow(phones)
prop_within_3_sd <- within_3_sd / nrow(phones)
prop_within_1_sd
prop_within_2_sd
prop_within_3_sd
within_3_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n() / nrow(phones))
View(within_3_sd)
View(prop_within_3_sd)
View(within_3_sd)
library(tidyverse)
library(janitor)
library(skimr)
phones <- read_csv("data/20190928-items.csv")
phones <- clean_names(phones)
skim(phones)
phones %>%
group_by(brand) %>%
summarise(num_phones = n()) %>%
slice_max(num_phones)
phones_stats <- phones %>%
filter(brand == "Samsung") %>%
summarise(
num = n(),
mean = mean(rating),
sd = sd(rating)
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white",
binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
)
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n())
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n())
within_3_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n() / nrow(phones))
# ok to use nrow(phones) as there are no missing values in ratings.
prop_within_1_sd <- within_1_sd / nrow(phones)
prop_within_2_sd <- within_2_sd / nrow(phones)
prop_within_3_sd <- within_3_sd / nrow(phones)
prop_within_1_sd
prop_within_2_sd
prop_within_3_sd
# ok to use nrow(phones) here as there are no missing ratings in the dataset
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n() / nrow(phones))
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n() / nrow(phones))
within_3_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n() / nrow(phones))
normal_distr <- c(0.68, 0.95, 0.997)
Q4_distr <- c(within_1_sd, within_2_sd, within_3_sd)
comparison <-  as_tibble(normal_distr, Q4_distr)
View(comparison)
View(Q4_distr)
# ok to use nrow(phones) here as there are no missing ratings in the dataset
within_1_sd <- phones %>%
filter(between(rating,
phones_stats$mean - phones_stats$sd,
phones_stats$mean + phones_stats$sd)) %>%
summarise(n() / nrow(phones)) %>%
pull()
within_2_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (2*phones_stats$sd),
phones_stats$mean + (2*phones_stats$sd))
) %>%
summarise(n() / nrow(phones)) %>%
pull()
within_3_sd <- phones %>%
filter(between(rating,
phones_stats$mean - (3*phones_stats$sd),
phones_stats$mean + (3*phones_stats$sd))
) %>%
summarise(n() / nrow(phones)) %>%
pull()
normal_distr <- c(0.68, 0.95, 0.997)
Q4_distr <- c(within_1_sd, within_2_sd, within_3_sd)
comparison <-  as_tibble(normal_distr, Q4_distr)
View(comparison)
comparison <-  as_tibble(normal_distr, Q4_distr)
View(comparison)
comparison <-  as_tibble(normal_distrbution = normal_distr, Q4_distribution = Q4_distr)
comparison <-  as_tibble(normal_distr = "normal_distrbution", Q4_distr = "Q4_distribution")
?as_tibble
comparison <-  as_tibble("normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
comparison <-  as_tibble("normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
normal_distr <- c(0.68, 0.95, 0.997)
Q4_distr <- c(within_1_sd, within_2_sd, within_3_sd)
comparison <-  as_tibble("normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
comparison <-  as_tibble(normal_distr, Q4_distr)
comparison <-  as_tibble(x, normal_distr, Q4_distr)
comparison <-  as_tibble(normal_distr, Q4_distr)
View(comparison)
comparison <-  as_tibble(Q4_distr)
View(comparison)
comparison <-  tibble("normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
View(comparison)
comparison <-  tibble("normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
comparison <-
```
comparison
normal_distr <- c(0.68, 0.95, 0.997)
Q4_distr <- c(within_1_sd, within_2_sd, within_3_sd)
sd <- c("within_1_sd", "within_2_sd", "within_3_sd")
comparison <-  tibble(sd,
"normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
comparison
how_many_sd <- c("within_1_sd", "within_2_sd", "within_3_sd")
comparison <-  tibble(how_many_sd,
"normal_distrbution" = normal_distr,
"Q4_distribution" = Q4_distr)
comparison
comparison %>%
pivot_longer(names_to = distribution, values_to = proportion_of_ratings) %>%
ggplot(aes(x = how_many_sd, y = proportion_of_ratings)) +
geom_col(aes(fill = distribution), position = "dodge")
comparison %>%
pivot_longer(names_to = distribution, values_to = proportion_of_ratings)
comparison %>%
select(-how_many_sd) %>%
pivot_longer(names_to = distribution, values_to = proportion_of_ratings) %>%
ggplot(aes(x = how_many_sd, y = proportion_of_ratings)) +
geom_col(aes(fill = distribution), position = "dodge")
comparison %>%
select(-how_many_sd) %>%
pivot_longer(names_to = distribution, values_to = proportion_of_ratings)
comparison %>%
select(-how_many_sd)
comparison %>%
select(-how_many_sd) %>%
pivot_longer(names_to = "distribution", values_to = "proportion_of_ratings")
?pivot_longer
comparison %>%
pivot_longer(cols = 2:3, names_to = "distribution", values_to = "proportion_of_ratings") %>%
ggplot(aes(x = how_many_sd, y = proportion_of_ratings)) +
geom_col(aes(fill = distribution), position = "dodge")
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white",
binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white",
binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = 1
),
col = "red"
)
phones %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = after_stat(density)),
col = "white",
binwidth = 0.1) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = phones_stats$sd
),
col = "red"
) +
stat_function(
fun = dnorm,
args = list(
mean = phones_stats$mean,
sd = 1
),
col = "blue"
)
?quantile
24 - 5
19 * 0.6
punif(10.751, 5, 22)
library(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
ggdensity(phones$rating)
?ggdensity
??ggdensity
library(ggpubr)
library(ggpubr)
library(ggplot2)
install.packages("ggplot2")
library(ggpubr)
library(ggpubr)
library(ggplot2)
library(ggpubr)
ggdensity(phones$rating)
library(tidyverse)
library(janitor)
library(skimr)
phones <- read_csv("data/20190928-items.csv")
phones <- clean_names(phones)
skim(phones)
ggdensity(phones$rating)
ggqqplot(phones$rating)
shapiro.test(phones$rating)
pnorm(-0.5)
