group_by(page_num_range) %>%
summarise(round(mean(average_rating), 3))
# the books were split into 4 groups based on number of pages. The number of pages were chosen based on the quartile information as <100, 100 to 300, 301 to 600 and >600.
books_subset %>%
select(num_pages, average_rating) %>%
mutate(page_num_range = case_when(
num_pages < 100 ~ "less than 100",
num_pages >= 100 & num_pages <= 300 ~ "100 to 300",
num_pages > 300 & num_pages <= 600 ~ "301 to 600",
num_pages > 600 ~ "greater than 600"
)) %>%
group_by(page_num_range) %>%
summarise(round(mean(average_rating), 2))
# the books were split into 4 groups based on number of pages. The number of pages were chosen based on the quartile information as <100, 100 to 300, 301 to 600 and >600.
books_subset %>%
select(num_pages, average_rating) %>%
mutate(page_num_range = case_when(
num_pages < 100 ~ "less than 100",
num_pages >= 100 & num_pages <= 300 ~ "100 to 300",
num_pages > 300 & num_pages <= 600 ~ "301 to 600",
num_pages > 600 ~ "greater than 600"
)) %>%
group_by(page_num_range) %>%
summarise(ave_rating = round(mean(average_rating), 2))
# the books were split into 4 groups based on number of pages. The number of pages were chosen based on the quartile information as <100, 100 to 300, 301 to 600 and >600.
books_subset %>%
select(num_pages, average_rating) %>%
mutate(page_num_range = case_when(
num_pages < 100 ~ "less than 100",
num_pages >= 100 & num_pages <= 300 ~ "100 to 300",
num_pages > 300 & num_pages <= 600 ~ "301 to 600",
num_pages > 600 ~ "greater than 600"
)) %>%
group_by(page_num_range) %>%
summarise(ave_rating = round(mean(average_rating), 2)) %>%
arrange()
# the books were split into 4 groups based on number of pages. The number of pages were chosen based on the quartile information as <100, 100 to 300, 301 to 600 and >600.
books_subset %>%
select(num_pages, average_rating) %>%
mutate(page_num_range = case_when(
num_pages < 100 ~ "less than 100",
num_pages >= 100 & num_pages <= 300 ~ "100 to 300",
num_pages > 300 & num_pages <= 600 ~ "301 to 600",
num_pages > 600 ~ "greater than 600"
)) %>%
group_by(page_num_range) %>%
summarise(ave_rating = round(mean(average_rating), 2)) %>%
arrange(ave_rating)
books_subset <- books_subset %>%
recode(publication_date == "1/1/1900", publication_date == "1/1/1968")
books_subset <- books_subset %>%
recode(publication_date, "1/1/1900" = "1/1/1968")
View(books)
books_subset <- books_subset %>%
mutate(recode(publication_date, "1/1/1900" = "1/1/1968"))
View(books_subset)
books_subset <- books_subset %>%
mutate(publication_date = recode(publication_date, "1/1/1900" = "1/1/1968"))
View(books_subset)
books_subset <- books_subset %>%
mutate(publication_date = (recode(publication_date, "1/1/1900" = "1/1/1968")))
View(books_subset)
# removing rowid, bookID, isbn and isbn13 as I don't think the ID or isbn values will provide much to investigate.
books_subset <- books %>%
select(-rowid, -bookID, -isbn, -isbn13, )
books_subset <- books_subset %>%
mutate(publication_date = (recode(publication_date, "1/1/1900" = "1/1/1968")))
View(books_subset)
# converting publication_date column to date format then extracting year. The results showed a book with wrong publication date at the top. This was corrected manually.
# fixing Consider the Lilies publication date. I think there must be a better way to do this.
books_subset <- books_subset %>%
mutate(publication_date = (recode(publication_date, "1/1/1900" = "1/1/1968")))
books_subset %>%
mutate(publication_date = as.Date(publication_date, tryFormats = c("%m/%d/%Y"))) %>%
mutate(year = format(publication_date, "%Y")) %>%
group_by(year) %>%
filter(ratings_count > 100) %>%
slice_max((average_rating), n = 1) %>%
select(title, authors, average_rating, year)
books_subset %>%
mutate(publication_date2 = as.Date(publication_date, tryFormats = c("%m/%d/%Y"))) %>%
mutate(year = format(publication_date2, "%Y")) %>%
filter(year == 2002)
books_subset %>%
mutate(publication_date2 = as.Date(publication_date, tryFormats = c("%m/%d/%Y"))) %>%
mutate(year = format(publication_date2, "%Y")) %>%
arrange(year)
library(tidyverse)
library(skimr)
books <- read_csv("data/books.csv")
glimpse(books)
skim(books)
num_authors <- books %>%
distinct(authors) %>%
nrow()
print(paste("The number of unique authors (or author combinations) is", num_authors))
# thought there might be some duplicates in the language column e.g. it might say 'eng' and 'english' but a quick check through shows it all makes sense
num_languages <- books %>%
distinct(language_code) %>%
nrow()
print(paste("The number of languages is", num_languages))
num_publishers <- books %>%
distinct(publisher) %>%
nrow()
print(paste("The number of publishers is", num_publishers))
# removing rowid, bookID, isbn and isbn13 as I don't think the ID or isbn values will provide much to investigate.
books_subset <- books %>%
select(-rowid, -bookID, -isbn, -isbn13, )
View(books)
# removing rowid, bookID, isbn and isbn13 as I don't think the ID or isbn values will provide much to investigate.
books_subset <- books %>%
select(-rowid, -bookID, -isbn, -isbn13, )
num_isbn <- books %>%
distinct(isbn) %>%
nrow()
print(paste("The number of isbn is", num_publishers))
View(books)
books %>%
group_by(isbn) %>%
summarise(count_isbn = n())
books %>%
group_by(isbn) %>%
summarise(count_isbn = n()) %>%
arrange(desc(count_isbn))
num_isbn <- books %>%
distinct(isbn) %>%
nrow()
print(paste("The number of isbn is", isbn))
num_isbn <- books %>%
distinct(isbn) %>%
nrow()
print(paste("The number of isbn is", num_isbn))
books %>%
group_by(isbn) %>%
summarise(count_isbn = n()) %>%
arrange(desc(count_isbn))
books_subset %>%
#  filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating))
books_subset %>%
#  filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(average_rating, n = 5)
books_subset %>%
#  filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(average_mean, n = 5)
books_subset %>%
#  filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top authors <- books_subset %>%
top_authors <- books_subset %>%
# found the ratings filter necessary again as it just gave 18 books with a 5.00 rating otherwise
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(authors = top_authors$authors)
books_subset %>%
filter(authors == top_authors$authors)
top_authors <- books_subset %>%
# found the ratings filter necessary again as it just gave 18 books with a 5.00 rating otherwise
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors
books_subset %>%
filter(authors == "top_authors$authors")
books_subset %>%
filter(authors == "Saul Leiter/Martin Harrison" |
authors == "Murray Sayle/Charles Flowers/Elliott Erwitt" |
authors == "Bill Watterson")
books_subset %>%
filter(authors == "Saul Leiter/Martin Harrison" |
authors == "Murray Sayle/Charles Flowers/Elliott Erwitt" |
authors == "Bill Watterson" |
authors == "Anonymous" |
authors == "David Allen Sibley")
books_subset %>%
group_by(authors) %>%
summarise(num_books_per_author = n())
books_subset %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author))
books_subset %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
books_subset %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
group()
books_subset %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
groups()
books_subset %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
books_subset %>%
filter(ratings_count > 100)
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count > 100)
group_by(authors) %>%
summarise(num_books_per_author = n(), .groups = keep) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count > 100)
group_by(authors)
View(books_subset)
books_subset %>%
# found the ratings filter necessary again as it just gave 18 books with a 5.00 rating otherwise
filter(ratings_count >= 100) %>%
group_by(authors)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n(), .groups = keep) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n(), .groups = 'keep') %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n())
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
top_authors_2plus_books
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
top_authors_2plus_books %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
View(top_authors_2plus_books)
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
View(top_authors_2plus_books)
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1)
top_authors_2plus_books %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author >1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 2) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 3) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 10) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 5) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
top_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_max(author_mean, n = 5)
top_authors_2plus_books
bottom_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_min(author_mean, n = 5)
bottom_authors_2plus_books
books %>%
filter(authors == "Monica Ali")
bottom_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 2) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_min(author_mean, n = 5)
bottom_authors_2plus_books
bottom_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 3) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_min(author_mean, n = 5)
bottom_authors_2plus_books
bottom_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 5) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_min(author_mean, n = 5)
bottom_authors_2plus_books
bottom_authors_2plus_books <- books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
filter(num_books_per_author > 1) %>%
group_by(authors) %>%
summarise(author_mean = mean(average_rating)) %>%
slice_min(author_mean, n = 5)
bottom_authors_2plus_books
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
arrange(desc(num_books_per_author)) %>%
slice_max(author_mean, n = 10)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
mutate(num_books_per_author = n()) %>%
slice_max(num_books_per_author, n = 10)
books_subset %>%
filter(ratings_count >= 100) %>%
group_by(authors) %>%
summarise(num_books_per_author = n()) %>%
slice_max(num_books_per_author, n = 10)
View(books_subset)
books_subset %>%
group_by(publisher) %>%
summarise(num_books_per_publisher = n()) %>%
slice_max(num_books_per_publisher, n = 10)
books_subset %>%
group_by(publisher) %>%
summarise(publisher_mean = mean(average_rating)) %>%
slice_max(publisher_mean, n = 5)
books_subset %>%
filter(average_rating > 100) %>%
group_by(publisher) %>%
summarise(publisher_mean = mean(average_rating)) %>%
slice_max(publisher_mean, n = 5)
books_subset %>%
filter(ratings_count > 100) %>%
group_by(publisher) %>%
summarise(publisher_mean = mean(average_rating)) %>%
slice_max(publisher_mean, n = 5)
books_subset %>%
filter(ratings_count > 100) %>%
group_by(publisher) %>%
summarise(publisher_mean = mean(average_rating)) %>%
slice_max(publisher_mean, n = 10)
